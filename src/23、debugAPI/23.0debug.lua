--[[
debug库并不给你一个可用的Lua调试器，而是给你提供一些为Lua写一个调试器的方便。出于性能方面的考虑，关于这方面官方的接口是通过C API实现的。
Lua中的debug库就是一种在Lua代码中直接访问这些C函数的方法。Debug库在一个debug表内声明了他所有的函数。
与其他的标准库不同的是，你应该尽可能少的使用debug库。首先，debug库中的一些函数性能比较低；第二，它破坏了语言的一些真理(sacred truths)，
比如你不能在定义一个局部变量的函数外部，访问这个变量。通常，在你的最终产品中，你不想打开这个debug库，或者你可能想删除这个库：
debug = nil
debug库由两种函数组成：自省(introspective)函数和hooks。自省函数使得我们可以检查运行程序的某些方面，比如活动函数栈、当前执行代码的行号、
本地变量的名和值。Hooks可以跟踪程序的执行情况。
Debug库中的一个重要的思想是栈级别(stack level)。一个栈级别就是一个指向在当前时刻正在活动的特殊函数的数字，也就是说，这个函数正在被调用但还没有返回。
调用debug库的函数级别为1，调用他(他指调用debug库的函数)的函数级别为2，以此类推。
--]]